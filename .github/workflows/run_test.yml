name: Python Autotest with Allure Reporting

on:
  workflow_dispatch:
    inputs:
      test_suite:
        description: Select test suite to run
        required: true
        type: choice
        default: smoke
        options:
          - smoke
          - regression
          - extended
          - all

permissions:
  contents: read
  pages: write
  id-token: write
  actions: read

env:
  ALLURE_VERSION: 2.24.0
  ALLURE_DIR: /opt/allure-$ALLURE_VERSION

jobs:
  setup-environment:
    runs-on: ubuntu-latest
    outputs:
      history_exists: ${{ steps.check-history.outputs.exists }}
    steps:
      - name: Check for existing history
        id: check-history
        run: |
          response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/artifacts?name=allure-history")
          
          if [ $(echo "$response" | jq '.total_count') -gt 0 ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

  download-history:
    needs: setup-environment
    if: needs.setup-environment.outputs.history_exists == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Download history artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-history
          path: allure-history

      - name: Prepare results directory
        run: mkdir -p allure-results/history

      - name: Copy historical data
        run: |
          if [ -d "allure-history/history" ]; then
            cp -r allure-history/history/* allure-results/history/
            echo "History copied successfully"
          else
            echo "No history found in artifact"
          fi

  run-tests:
    runs-on: ubuntu-latest
    needs: [setup-environment, download-history]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser chromium-chromedriver

      - name: Install test dependencies
        run: pip install -r requirements.txt

      - name: Prepare results directory
        if: needs.setup-environment.outputs.history_exists == 'false'
        run: mkdir -p allure-results/history

      - name: Run selected test suite
        run: |
          case ${{ inputs.test_suite }} in
            smoke)
              pytest -v -n 3 -m smoke --reruns 2 --alluredir=allure-results
              ;;
            regression)
              pytest -v -n 3 -m regression --reruns 2 --alluredir=allure-results
              ;;
            extended)
              pytest -v -n 3 -m extended --reruns 2 --alluredir=allure-results
              ;;
            all)
              pytest -v -n 3 --reruns 2 --alluredir=allure-results
              ;;
          esac || echo "Tests completed with status code $?"

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          retention-days: 1

  generate-report:
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Download test results
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: allure-results

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Allure
        run: |
          sudo apt-get install -y wget unzip
          wget https://github.com/allure-framework/allure2/releases/download/$ALLURE_VERSION/allure-$ALLURE_VERSION.tgz
          sudo tar -zxvf allure-$ALLURE_VERSION.tgz -C /opt/
          sudo ln -s $ALLURE_DIR/bin/allure /usr/bin/allure

      - name: Generate Allure report
        run: |
          allure generate allure-results -o allure-report --clean
          
          # Archive history for next run
          mkdir -p allure-history
          if [ -d "allure-results/history" ]; then
            cp -r allure-results/history allure-history/
          fi

      - name: Upload report artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report
          retention-days: 1

      - name: Upload history artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-history
          path: allure-history
          retention-days: 30

  deploy-report:
    runs-on: ubuntu-latest
    needs: generate-report
    steps:
      - name: Download report artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: allure-report

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        with:
          artifact_name: allure-report
          target_branch: gh-pages
