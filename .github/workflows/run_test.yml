name: Python autotest

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: choose test set
        required: true
        type: choice
        default: smoke
        options:
          - smoke
          - regression
          - extended
          - all

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  download-history:
    runs-on: ubuntu-latest
    name: Download history
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
        
      - name: Download artifacts (Allure results)
        run: |
          ARTIFACT_ID=$(curl -sL \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/avrelin-aleksey/ui_website_magento/actions/artifacts?name=allure-results" \
            | python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id'])")
          if [ -z "$ARTIFACT_ID" ]; then
            echo "No allure-results artifact found. Skipping."
            exit 0
          fi
          curl -L \
            -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/avrelin-aleksey/ui_website_magento/actions/artifacts/$ARTIFACT_ID/zip \
            -o artifacts.zip

      - name: Unzip allure-results
        run: mkdir -p allure-results && unzip -q artifacts.zip -d allure-results

      - name: Download pages artifact
        run: |
          REPORT_ID=$(curl -sL \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/avrelin-aleksey/ui_website_magento/actions/artifacts?name=github-pages" \
            | python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id'])")
          if [ -z "$REPORT_ID" ]; then
            echo "No github-pages artifact found. Skipping."
            exit 0
          fi
          curl -L \
            -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/avrelin-aleksey/ui_website_magento/actions/artifacts/$REPORT_ID/zip \
            -o pages.zip

      - name: Unzip pages.zip and extract history
        run: |
          mkdir -p old_pages pages_history
          unzip -q pages.zip -d old_pages
          tar -xvf old_pages/artifact.tar -C pages_history

      - name: Copy history to allure-results
        run: |
          mkdir -p allure-results
          cp -r pages_history/history/* allure-results

      - name: Store allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          retention-days: 1

  run-tests:
    runs-on: ubuntu-latest
    name: Run autotests
    needs: download-history
    steps:
      - name: Checkout autotest repository
        uses: actions/checkout@v4
        
      - name: Setup Python environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Download allure-results artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-results

      - name: Run tests based on deployment target
        run: |
          if [ "${{ github.event.inputs.deployment_target }}" == "all" ]; then
            pytest -vs -n 3 --reruns 2 --alluredir=allure-results
          elif [ "${{ github.event.inputs.deployment_target }}" == "smoke" ]; then
            pytest -vs -n 3 -m smoke --reruns 2 --alluredir=allure-results
          elif [ "${{ github.event.inputs.deployment_target }}" == "regression" ]; then
            pytest -vs -n 3 -m regression --reruns 2 --alluredir=allure-results
          elif [ "${{ github.event.inputs.deployment_target }}" == "extended" ]; then
            pytest -vs -n 3 -m extended --reruns 2 --alluredir=allure-results
          fi
        continue-on-error: true

      - name: Store Allure Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ github.run_id }}
          path: allure-results
          retention-days: 1

  generate-report:
    runs-on: ubuntu-latest
    needs: run-tests
    name: Generate Allure report
    steps:
      - name: Download allure-results artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-results-${{ github.run_id }}
          path: allure-results
  
      - name: Debug - List allure-results files
        run: |
          echo "=== Allure results content ==="
          ls -la ./allure-results/
          find ./allure-results -type f | head -n 20
  
      - name: Install Java and Allure
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - run: sudo wget https://github.com/allure-framework/allure2/releases/download/2.23.1/allure-2.23.1.tgz && sudo tar -zxvf allure-2.23.1.tgz -C /opt/ && sudo ln -s /opt/allure-2.23.1/bin/allure /usr/bin/allure
      - name: Generate Allure report
        run: |
          allure generate ./allure-results -o ./_site --clean
          echo "=== Generated report structure ==="
          ls -la ./_site/
          find ./_site -type f | head -n 20
  
      - name: Generate Allure report
        run: |
          allure generate ./allure-results -o ./_site --clean
          echo "=== Generated report files ==="
          ls -la ./_site/

      - name: Upload report artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site
  
  publish-report:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: generate-report
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        with:
          artifact_name: 'pages-artifact'
